expo init FitnessTracker
cd FitnessTracker
npm install @react-navigation/native @react-navigation/stack react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/viewpager firebase
// firebaseConfig.js
export default {
  apiKey: "YOUR_API_KEY",
  authDomain: "YOUR_AUTH_DOMAIN",
  projectId: "YOUR_PROJECT_ID",
  storageBucket: "YOUR_STORAGE_BUCKET",
  messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
  appId: "YOUR_APP_ID",
};
// App.js
import React from 'react';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import HomeScreen from './screens/HomeScreen';
import ExerciseScreen from './screens/ExerciseScreen';

const Stack = createStackNavigator();

export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="Home">
        <Stack.Screen name="Home" component={HomeScreen} />
        <Stack.Screen name="Exercise" component={ExerciseScreen} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}
// HomeScreen.js
import React from 'react';
import { View, Button } from 'react-native';

const HomeScreen = ({ navigation }) => {
  return (
    <View>
      <Button
        title="Start Exercise"
        onPress={() => navigation.navigate('Exercise')}
      />
    </View>
  );
};

export default HomeScreen;

// ExerciseScreen.js
import React, { useState } from 'react';
import { View, Text, Button } from 'react-native';
import firebase from 'firebase/app';
import 'firebase/firestore';

const ExerciseScreen = () => {
  const [exerciseCount, setExerciseCount] = useState(0);

  const incrementExerciseCount = async () => {
    // Update the exercise count in Firebase
    const userUid = firebase.auth().currentUser.uid;
    const userRef = firebase.firestore().collection('users').doc(userUid);
    
    try {
      await userRef.update({
        exerciseCount: firebase.firestore.FieldValue.increment(1),
      });
      setExerciseCount(exerciseCount + 1);
    } catch (error) {
      console.error('Error updating exercise count: ', error);
    }
  };

  return (
    <View>
      <Text>Exercise Count: {exerciseCount}</Text>
      <Button title="Increment" onPress={incrementExerciseCount} />
    </View>
  );
};

export default ExerciseScreen;
